Resources:
  HelloHandlerServiceRole11EF7C63:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: lambda.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AWSLambdaBasicExecutionRole
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/HelloHandler/ServiceRole/Resource
  HelloHandler2E4FBA4D:
    Type: AWS::Lambda::Function
    Properties:
      Code:
        S3Bucket:
          Ref: AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706S3BucketE6D68537
        S3Key:
          Fn::Join:
            - ""
            - - Fn::Select:
                  - 0
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706S3VersionKey388DEB7B
              - Fn::Select:
                  - 1
                  - Fn::Split:
                      - "||"
                      - Ref: AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706S3VersionKey388DEB7B
      Handler: hello.handler
      Role:
        Fn::GetAtt:
          - HelloHandlerServiceRole11EF7C63
          - Arn
      Runtime: nodejs10.x
    DependsOn:
      - HelloHandlerServiceRole11EF7C63
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/HelloHandler/Resource
      aws:asset:path: /Users/ZiaKhan/Documents/GitHub/full-stack-serverless-cdk/step01_hello_lambda/lambda
      aws:asset:property: Code
  EndpointEEF1FD8F:
    Type: AWS::ApiGateway::RestApi
    Properties:
      Name: Endpoint
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Resource
  EndpointCloudWatchRoleC3C64E0F:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Statement:
          - Action: sts:AssumeRole
            Effect: Allow
            Principal:
              Service: apigateway.amazonaws.com
        Version: "2012-10-17"
      ManagedPolicyArns:
        - Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - :iam::aws:policy/service-role/AmazonAPIGatewayPushToCloudWatchLogs
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/CloudWatchRole/Resource
  EndpointAccountB8304247:
    Type: AWS::ApiGateway::Account
    Properties:
      CloudWatchRoleArn:
        Fn::GetAtt:
          - EndpointCloudWatchRoleC3C64E0F
          - Arn
    DependsOn:
      - EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Account
  EndpointDeployment318525DA6cd9020c46f1c4d6d53bcff4c66a9a53:
    Type: AWS::ApiGateway::Deployment
    Properties:
      RestApiId:
        Ref: EndpointEEF1FD8F
      Description: Automatically created by the RestApi construct
    DependsOn:
      - EndpointproxyANYC09721C5
      - Endpointproxy39E2174E
      - EndpointANY485C938B
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Deployment/Resource
  EndpointDeploymentStageprodB78BEEA0:
    Type: AWS::ApiGateway::Stage
    Properties:
      RestApiId:
        Ref: EndpointEEF1FD8F
      DeploymentId:
        Ref: EndpointDeployment318525DA6cd9020c46f1c4d6d53bcff4c66a9a53
      StageName: prod
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/DeploymentStage.prod/Resource
  Endpointproxy39E2174E:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId:
        Fn::GetAtt:
          - EndpointEEF1FD8F
          - RootResourceId
      PathPart: "{proxy+}"
      RestApiId:
        Ref: EndpointEEF1FD8F
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/{proxy+}/Resource
  EndpointproxyANYApiPermissionStep01HelloLambdaStackEndpoint5914E572ANYproxy0704DB52:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloHandler2E4FBA4D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /
            - Ref: EndpointDeploymentStageprodB78BEEA0
            - /*/*
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/{proxy+}/ANY/ApiPermission.Step01HelloLambdaStackEndpoint5914E572.ANY..{proxy+}
  EndpointproxyANYApiPermissionTestStep01HelloLambdaStackEndpoint5914E572ANYproxy09178767:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloHandler2E4FBA4D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /test-invoke-stage/*/*
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/{proxy+}/ANY/ApiPermission.Test.Step01HelloLambdaStackEndpoint5914E572.ANY..{proxy+}
  EndpointproxyANYC09721C5:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Ref: Endpointproxy39E2174E
      RestApiId:
        Ref: EndpointEEF1FD8F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - HelloHandler2E4FBA4D
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/{proxy+}/ANY/Resource
  EndpointANYApiPermissionStep01HelloLambdaStackEndpoint5914E572ANY5ED85D47:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloHandler2E4FBA4D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /
            - Ref: EndpointDeploymentStageprodB78BEEA0
            - /*/
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/ANY/ApiPermission.Step01HelloLambdaStackEndpoint5914E572.ANY..
  EndpointANYApiPermissionTestStep01HelloLambdaStackEndpoint5914E572ANYE562F898:
    Type: AWS::Lambda::Permission
    Properties:
      Action: lambda:InvokeFunction
      FunctionName:
        Fn::GetAtt:
          - HelloHandler2E4FBA4D
          - Arn
      Principal: apigateway.amazonaws.com
      SourceArn:
        Fn::Join:
          - ""
          - - "arn:"
            - Ref: AWS::Partition
            - ":execute-api:"
            - Ref: AWS::Region
            - ":"
            - Ref: AWS::AccountId
            - ":"
            - Ref: EndpointEEF1FD8F
            - /test-invoke-stage/*/
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/ANY/ApiPermission.Test.Step01HelloLambdaStackEndpoint5914E572.ANY..
  EndpointANY485C938B:
    Type: AWS::ApiGateway::Method
    Properties:
      HttpMethod: ANY
      ResourceId:
        Fn::GetAtt:
          - EndpointEEF1FD8F
          - RootResourceId
      RestApiId:
        Ref: EndpointEEF1FD8F
      AuthorizationType: NONE
      Integration:
        IntegrationHttpMethod: POST
        Type: AWS_PROXY
        Uri:
          Fn::Join:
            - ""
            - - "arn:"
              - Ref: AWS::Partition
              - ":apigateway:"
              - Ref: AWS::Region
              - :lambda:path/2015-03-31/functions/
              - Fn::GetAtt:
                  - HelloHandler2E4FBA4D
                  - Arn
              - /invocations
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/Endpoint/Default/ANY/Resource
  CDKMetadata:
    Type: AWS::CDK::Metadata
    Properties:
      Modules: aws-cdk=1.72.0,@aws-cdk/assets=1.72.0,@aws-cdk/aws-apigateway=1.72.0,@aws-cdk/aws-applicationautoscaling=1.72.0,@aws-cdk/aws-autoscaling-common=1.72.0,@aws-cdk/aws-cloudwatch=1.72.0,@aws-cdk/aws-codeguruprofiler=1.72.0,@aws-cdk/aws-ec2=1.72.0,@aws-cdk/aws-events=1.72.0,@aws-cdk/aws-iam=1.72.0,@aws-cdk/aws-kms=1.72.0,@aws-cdk/aws-lambda=1.72.0,@aws-cdk/aws-logs=1.72.0,@aws-cdk/aws-s3=1.72.0,@aws-cdk/aws-s3-assets=1.72.0,@aws-cdk/aws-sqs=1.72.0,@aws-cdk/aws-ssm=1.72.0,@aws-cdk/cloud-assembly-schema=1.72.0,@aws-cdk/core=1.72.0,@aws-cdk/cx-api=1.72.0,@aws-cdk/region-info=1.72.0,jsii-runtime=node.js/v12.16.2
    Metadata:
      aws:cdk:path: Step01HelloLambdaStack/CDKMetadata/Default
    Condition: CDKMetadataAvailable
Parameters:
  AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706S3BucketE6D68537:
    Type: String
    Description: S3 bucket for asset "b12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706"
  AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706S3VersionKey388DEB7B:
    Type: String
    Description: S3 key for asset version "b12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706"
  AssetParametersb12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706ArtifactHashD6D0F8EA:
    Type: String
    Description: Artifact hash for asset "b12b4d45960ea908338c4544bcac8039b13736e6d6af9e8a85ef57f538e29706"
Outputs:
  Endpoint8024A810:
    Value:
      Fn::Join:
        - ""
        - - https://
          - Ref: EndpointEEF1FD8F
          - .execute-api.
          - Ref: AWS::Region
          - "."
          - Ref: AWS::URLSuffix
          - /
          - Ref: EndpointDeploymentStageprodB78BEEA0
          - /
Conditions:
  CDKMetadataAvailable:
    Fn::Or:
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-northeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-1
          - Fn::Equals:
              - Ref: AWS::Region
              - ap-southeast-2
          - Fn::Equals:
              - Ref: AWS::Region
              - ca-central-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - cn-northwest-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-central-1
      - Fn::Or:
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-north-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-2
          - Fn::Equals:
              - Ref: AWS::Region
              - eu-west-3
          - Fn::Equals:
              - Ref: AWS::Region
              - me-south-1
          - Fn::Equals:
              - Ref: AWS::Region
              - sa-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-east-2
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-1
          - Fn::Equals:
              - Ref: AWS::Region
              - us-west-2

